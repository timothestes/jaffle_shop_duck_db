name: pre-commit-check

on:
  pull_request:
    branches: 
      - main

jobs:
  pre-commit-pip:
    name: Install pre-commit via pip
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: [3.8]
    env:
      DBT_PROFILES_DIR: .

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetches all history for all branches

      - name: Set up Git repository
        run: |
          # Ensure GitHub Actions considers the workspace safe
          git config --global --add safe.directory $GITHUB_WORKSPACE
          # Explicitly fetch all remote branches
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          # Check out the PR's head branch explicitly if needed
          git checkout ${GITHUB_HEAD_REF}

      - name: Get changed files
        id: get_file_changes
        run: |
          echo "Fetching changes..."
          # Fetch 'main' and set it as the base ref
          git fetch origin main:${GITHUB_BASE_REF}
          # List new or modified files, excluding deletions
          git diff --name-only ${{ github.base_ref }}...HEAD > changes.txt
          FILES_MODIFIED=$(cat changes.txt | grep -v '^D' | tr '\n' ' ')
          FILES_ADDED=$(git diff --name-status ${{ github.base_ref }}...HEAD | grep '^A' | cut -f2 | tr '\n' ' ')
          echo "::set-output name=files_modified::${FILES_MODIFIED}"
          echo "::set-output name=files_added::${FILES_ADDED}"

      - name: Get changed .sql files in /models to lint
        id: get_files_to_lint
        run: |
          echo "::set-output name=files::$(
            echo \
            $(echo ${{ steps.get_file_changes.outputs.files_modified }} | 
            tr ' ' '\n' | 
            grep -E '^models.*\.sql$' | 
            tr '\n' ' ') \
            $(echo ${{ steps.get_file_changes.outputs.files_added }} | 
            tr ' ' '\n' | 
            grep -E '^models.*\.sql$' | 
            tr '\n' ' ')
          )"

      - name: Run pre-commit
        run: |
          pre-commit run --files ${{ steps.get_files_to_lint.outputs.files }}
