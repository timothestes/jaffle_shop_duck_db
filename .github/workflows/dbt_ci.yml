name: pre-commit-check

on:
  pull_request:
    branches: 
      - main

jobs:
  pre-commit-pip:
    name: Install pre-commit via pip
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: [3.8]

    # Set environment variables used throughout workflow
    env:
      DBT_PROFILES_DIR: .

    steps:

      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

    # Using bash and pip to install dbt and pre-commit
    # Update the dbt installation command to include the adapter you need
      - name: Install dbt and pre-commit
        shell: bash -l {0}
        run: |
          python -m pip install dbt-postgres pre-commit

    # This action will output all the files that are being created and modified in our PR
      - name: Get changed files
        id: get_file_changes
        run: |
          echo "Fetching changes..."
          git fetch origin ${{ github.base_ref }}  # Fetch base branch
          git diff --name-only ${{ github.base_ref }}...HEAD > changes.txt
          FILES_MODIFIED=$(cat changes.txt | grep -v '^D' | tr '\n' ' ')
          FILES_ADDED=$(git diff --name-status ${{ github.base_ref }}...HEAD | grep '^A' | cut -f2 | tr '\n' ' ')
          echo "::set-output name=files_modified::${FILES_MODIFIED}"
          echo "::set-output name=files_added::${FILES_ADDED}"

    # Transforming the output of get_file_changes to a string we can use for our next step
    # We want to take in account both new files and files that have been modified
      - name: Get changed .sql files in /models to lint
        id: get_files_to_lint
        run: |
          echo "::set-output name=files::$(
            echo \
            $(echo ${{ steps.get_file_changes.outputs.files_modified }} | 
            tr ' ' '\n' | 
            grep -E '^models.*\.sql$' | 
            tr '\n' ' ') \
            $(echo ${{ steps.get_file_changes.outputs.files_added }} | 
            tr ' ' '\n' | 
            grep -E '^models.*\.sql$' | 
            tr '\n' ' ')
          )"

      - name: Run pre-commit
        run: |
          pre-commit run --files $